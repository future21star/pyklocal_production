section.account_page
  .container-fluid
    .row
      .col-md-10.col-md-offset-1.col-xs-12.account_page_wrap
        .row
          .col-xs-12
            ol.breadcrumb
              li
                a href="/"  Home
              li
                span My Account
        .row
          =render :partial => "spree/shared/user_menu", locals: {current: "change_password"}

          .col-lg-9.col-md-8.col-sm-8.col-xs-12
            h3 Change Password
            .address-from.personalinfo

              - if current_spree_user && @user == current_spree_user

                = form_for Spree::User.new,:html => {class: 'form-horizontal'}, :url => spree.user_path(@user), :method => :put do |f|

                    = render partial: "spree/shared/error_messages", locals: {target: @user}
                    .col-sm-12


                    .col-sm-12
                      .form-group
                        label.col-sm-2.control-label New Password:
                        .col-sm-10
                          = f.password_field :password, class: "form-control", id: "input-password", placeholder: "new password",maxlength: "30"
                          span#password-error.inline-error

                    .col-sm-12
                      .form-group
                        label.col-sm-2.control-label Retype New Password:
                        .col-sm-10
                          = f.password_field :password_confirmation, class: "form-control", id: "input-password-confirm", placeholder: "new password confirmation",maxlength: "30"
                          span#password-confirm-error.inline-error

                    .form-group
                      .col-sm-offset-3.col-sm-7
                        button type="submit" class="btn btn-default"
                          | Save Changes
              - else
                = render partial: "spree/shared/error_messages"
- content_for :js do
  javascript:
    $(document).ready(function(){
      $('#new_user').on('submit', function(e){
          e.preventDefault();
          if ((validatePassword()) * (validateConfirmPassword())) {
              this.submit();
          }
      });
    });


   $('#input-password').on('blur',function(){
      validatePassword();
    });

    $('#input-password-confirm').on('blur',function(){
        validateConfirmPassword();
    });

    function validatePassword(){
      flag = true;
      errorStr = "";
      if($('#input-password').val().trim().length == 0){
        errorStr += "Password can not be blank";
        flag = false;
      }

      if (($('#input-password').val().trim().length > 0) && ($('#input-password').val().trim().length < 6)){
        errorStr += "Password length must be greater than 6";
        flag = false;
      }


      if (flag == false){
        OutputErrorStr = "<p class='text-red'> " + errorStr + "</p>";
        $('#password-error').html(OutputErrorStr);
         $('#password-error').show();
        return 0;
      }
      else{
         $('#password-error').hide();
        return 1;
      }
    }

    function validateConfirmPassword(){
      if($('#input-password').val().trim() != $('#input-password-confirm').val().trim()) {
         $('#password-confirm-error').html("<p class='text-red'> Password does not match");
         $('#password-confirm-error').show();
         return 0;
      }
      else{
         $('#password-confirm-error').hide();
        return 1;
      }
    }

   

