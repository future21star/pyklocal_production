c
self.changes.include?(:count_on_hand)
self
n
c
completion_route
c
n
@order
c
params
c
redirect_if_legacy_path
n
c
params[:q][:price]
c
params[:q] && params[:q][:search]
params[:q]!=nil && params[:q][:search]
params[:q]
params[:q][:search].nil?
params[:q][:search]
params[:q] && params[:q][:search]
params[:q][:search]
params[:q]
params
params[:q][:search]
params[:q]
params
c
n
params
c
line_item.quantity
line_item.display_items
line_item
line_item.display_items
line_item
line_item.display_amount
line_item
c
exit
c
Spree::User.where(email:"seller@w3villa.com")[0].first_name
Spree::User.where(email:"seller@w3villa.com")[0]
@seller.first_name
@seller
@seller.save!
@seller.save
Spree::User.where(email:"seller@w3villa.com")[0]
Spree::User.where(email:"seller@w3villa.com")
@seller.hidden
@seller
n
@seller
c
Spree::Seller.where(email: "seller@w3villa.com")[0].hidden
Spree::Seller.where(email: "seller@w3villa.com")[0]
Spree::Seller.where(email: "seller@w3villa.com").hiddenhidden
Spree::Seller.where(email: "seller@w3villa.com").hidden
Spree::Seller.where(email: "seller@w3villa.com")
Spree::Seller.where(email: "seller@w3villa.com")"
merchant.hidden
merchant
merchant.hidden
c
@seller.hidden
@seller
admin_sellers_path
c
admin_sellers_path
c
admin_seller_stores_path(@seller)
c
c\
c
n
c
@store.spree_productsc
@store.spree_products
@store
n
c
@seller.stores.first.deleted_at
@seller.stores.first
@seller.stores
@store
n
@seller.hidden
n
c
cc
c
n
product.buyable
n
@store.spree_products
product
c
n
@store.spree_products[1]
@store.spree_products[0]
@store.spree_products
@store.deleted_at
@store
n
@store
n
c
link_to 'Deactivate', admin_seller_deactivate_path(merchant)
admin_seller_deactivate_path(merchant)
link_to ('Deactivate', admin_seller_deactivate_path(merchant))
admin_seller_deactivate_path(merchant)
admin_seller_deactivate_path
link_to ('Deactivate', admin_deactivate_seller_path)
link_to_deactivate
link_to_edit merchant, :no_text => true
c
cv
c
n
c
exit
Spree::LineItem.first.options
Spree::LineItem.first.option
Spree::LineItem.first
Spree::LineItem
order.line_items.new.option
order.line_items.new.options
order.line_items.new
opts
order.line_items.new(quantity:quantity, variant:variant, delivery_type:delivery_type)
delivery_type
order.line_items.new(quantity:quantity, variant:variant, delivery_type:delivery_type, options:opts)
opts
order.line_items.new(quantity:quantity, variant:variant, options:opts)
order.line_items.new(quantity:quantity, variant:variant)
opts
n
{ currency: order.currency }.merge ActionController::Parameters.new(options).permit(PermittedAttributes.line_item_attributes)
   32:                                             permit(PermittedAttributes.line_item_attributes)
{ currency: order.currency }.merge ActionController::Parameters.new(options).
opts
c
opts
quantity
n
quantity
variant
n
variant
quantity
n
delivery_type
elivery_type
quantity
variant
c
variant
delivery_type
options
quantity
n
c
opts
variant
delivery_type
quantity
exception
n
order
order.line_items
n
order
n
order
c
order
order.contents
order
n
c
n
order.line_items
order
n
order
n
current_order(create_order_if_necessary: true)
current_order
n
c
self.product
c
@variant.product.total_on_hand
n
c
@variant.product
n
c
products.first.variants.first.deleted_at
products.first.variants.first
products.first.variants
products.first.deleted_at
products.first
products.first.variants_including_master
product
c
n
products.last
products.last.destroy
products
n
stores.first
c
n
product.variants_including_master[0]
product.variants_including_master
product.variants_including_master.update_all(deleted_at: Time.now)
product.variants_including_master.update_all(:deleted_at, Time.now)
product.variants_including_master.first.deleted_at
product.variants_including_master.first
product.variants_including_master.update_all(deleted_at: Time.now)
product.update_column(:deleted_at, Time.now)
product.variants_including_master
product
c
@search
n
params
n
@collection
@collectoin
n
Spree::Role.first
Spree::Role
n
@collection
exit
c
line_items
c
product.destroy
product
product.destroy
n
line_items.any?
line_items
c
Spree::Product.friendly.find(products.first.id).destroy
Spree::Product.friendly.find(products.first.id)
Spree::Product.friendly
products.first
products.first.destroy
products.first.variants.destroy
products.first.variants
