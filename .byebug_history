c
item.product.store_id == store.id
item = invoice.line_items.last
c
store
c
@store
c
@store
store
c
@store
c
@store
c
n
@store
store
c
@bookkeeping_document.pdf
@bookkeeping_document
c
 [@bookkeeping_document, @store]
c
params
@store
params
params[:doc]
paramsadfads
params[:store]
params
@store
c
@doc
c
[@bookkeeping_document.pdf, @store]
c
@doc
c
@store
c
exit
c
invoice_pdf_merchant_store_path(id: @store.id, bookkeeping_document_id: bookkeeping_document.id, format: :pdf)
invoice_pdf_merchant_store_path(id: @store.id, bookkeeping_document_id: bookkeeping_document.id)
invoice_pdf_merchant_store_path
c
invoice_pdf_merchant_store_path([id: @store.id, bookkeeping_document_id: bookkeeping_document.id])
invoice_pdf_merchant_store_path(id: @store.id, bookkeeping_document_id: bookkeeping_document.id)
invoice_pdf_merchant_store_path(id: @store.id, bookkeeping_document_id: bookkeeping_document.id])
@store
invoice_pdf_merchant_store_path(id: @store, bookkeeping_document])
invoice_pdf_merchant_store_path([@store, bookkeeping_document])
invoice_pdf_merchant_store_path
c
current_user
current_vendor
c
params
@store
c
@store
store
c
doc
c
@doc
c
exit
c
Spree::Order.find(355).line_items.last.price
Spree::Order.find(355).line_items.last.product.store
Spree::Order.find(355).line_items.last.product
bookkeeping_document
Spree::Order.find(355).line_items.last
Spree::Order.find(355).line_items.last.
Spree::Order.find(355).line_items.last.product
Spree::Order.find(355).line_items.first.product
 Merchant::Store.find(34)
 Spree::Store.find(34)
Spree::Product.last
Spree::Product.first
@store
@store.products
@store.product
@store.products
Spree::Order.find(355).line_items.first.product
Spree::Order.find(355).line_items.first
@store
Spree::Order.find(355).line_items.first.product
Spree::Store.find(28)
Merchant::Store.find(28)
Spree::Store
Store
Spree::Store.find(28)
Spree::Order.find(355).line_items.first.product
Spree::Order.find(355).line_items.first.product.store
Spree::Order.find(355).line_items.first.product
Spree::Order.find(355).line_items.first
Spree::Order.find(355).line_items
Spree::Order.find(355)
bookkeeping_document
exit
Spree::Order.line_items
Spree::Order.items
Spree::Order.find(355)
Order.find(355)
bookkeeping_document
bookkeeping_document.total.to_f
ActionController::Base.helpers.number_to_currency(bookkeeping_document.total.to_f)
c
dc
c
order.get_store_line_items(@store.id)[0].price.to_f
order.get_store_line_items(@store.id)[1].price.to_f
order.get_store_line_items(@store.id)[1].price
order.get_store_line_items(@store.id)[1].product
order.get_store_line_items(@store.id)[0].product
order.get_store_line_items(@store.id)[2]
order.get_store_line_items(@store.id)[1]
order.get_store_line_items(@store.id)[0]
order.get_store_line_items(@store.id)
order.get_store_line_items
order
line_item.product.name
line_item.product
c
ASIN::Client.instance.lookup
n
exit
ASIN::Client.instance.lookup
ASIN::Client.instance
n
ASIN::Configuration
ASIN
ASIN_CONFIG
n
exit
exi
exit
AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
n
c
params
exit
AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
n
c
params
n
c
AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
AMAZON_CLIENT
n
params
n
c
n
params[:keywords].present?
params
n
c
@search.results
c
n
c
exit
@seller.stores.first.seller
@seller.stores.first
@seller.stores
@seller
c
 AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
n
exit
exigt
YAML.load_file("#{Rails.root}/config/api_config.yml")[Rails.env]
Rails.env
AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
AMAZON_CLIENT
n
c
cc
c
Rails.application.secrets.HOST_URL
c
Rails.application.secrets.HOST_URL
c
Spree::Store.default
Spree::Store.first
Spree::Store.last
Spree::Store.lastr
Spree::Store.default
Spree::Store.current
request.host
c
request
c
Spree::Store.current
Spree::Store
Spree::Store.current.url
spree.spree_user_confirmation_url(:confirmation_token => token, :host => Spree::Store.current.url)
token
c
store
c
store
store = Merchant::Store.last
Merchant::Store.last
params
c
exit
params[:q]!=nil && params[:q][:lat].present? && params[:q][:lng].present?
c
params
c
params[:q][:radius] = "10000"
params
c
Merchant::Store.last.products
Merchant::Store.last
params
c
params
c
params
c
params
params[:q][:radius] = "100000"
params
c
params
c
params
c
params
c
bill_address
printable.printable_id
n
printable.printable_id
printable
c
Spree::PrintInvoice::Config.store_pdf
Spree::PrintInvoice::Config
Spree::Spree::PrintInvoice::Config
c
invoice = Spree::Order.find(invoice.printable_id)c
invoice.line_items
invoice = Spree::Order.find(invoice.printable_id)
invoice
c
printable.get_order_home_delivery_line_items_ids.count
printable.display_total.to_s
printable.completed_at
printable.number
