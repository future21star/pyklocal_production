c
cv
c
n
c
exit
Spree::LineItem.first.options
Spree::LineItem.first.option
Spree::LineItem.first
Spree::LineItem
order.line_items.new.option
order.line_items.new.options
order.line_items.new
opts
order.line_items.new(quantity:quantity, variant:variant, delivery_type:delivery_type)
delivery_type
order.line_items.new(quantity:quantity, variant:variant, delivery_type:delivery_type, options:opts)
opts
order.line_items.new(quantity:quantity, variant:variant, options:opts)
order.line_items.new(quantity:quantity, variant:variant)
opts
n
{ currency: order.currency }.merge ActionController::Parameters.new(options).permit(PermittedAttributes.line_item_attributes)
   32:                                             permit(PermittedAttributes.line_item_attributes)
{ currency: order.currency }.merge ActionController::Parameters.new(options).
opts
c
opts
quantity
n
quantity
variant
n
variant
quantity
n
delivery_type
elivery_type
quantity
variant
c
variant
delivery_type
options
quantity
n
c
opts
variant
delivery_type
quantity
exception
n
order
order.line_items
n
order
n
order
c
order
order.contents
order
n
c
n
order.line_items
order
n
order
n
current_order(create_order_if_necessary: true)
current_order
n
c
self.product
c
@variant.product.total_on_hand
n
c
@variant.product
n
c
products.first.variants.first.deleted_at
products.first.variants.first
products.first.variants
products.first.deleted_at
products.first
products.first.variants_including_master
product
c
n
products.last
products.last.destroy
products
n
stores.first
c
n
product.variants_including_master[0]
product.variants_including_master
product.variants_including_master.update_all(deleted_at: Time.now)
product.variants_including_master.update_all(:deleted_at, Time.now)
product.variants_including_master.first.deleted_at
product.variants_including_master.first
product.variants_including_master.update_all(deleted_at: Time.now)
product.update_column(:deleted_at, Time.now)
product.variants_including_master
product
c
@search
n
params
n
@collection
@collectoin
n
Spree::Role.first
Spree::Role
n
@collection
exit
c
line_items
c
product.destroy
product
product.destroy
n
line_items.any?
line_items
c
Spree::Product.friendly.find(products.first.id).destroy
Spree::Product.friendly.find(products.first.id)
Spree::Product.friendly
products.first
products.first.destroy
products.first.variants.destroy
products.first.variants
products.variants.destroy
products.first.destroy
n
c
products
n
c
Spree::Product.where(:store_name, "The M@ni Stttttoooorre") 
products.first.store_name
products.first.store.name
query.results
products
n
stores.first.name
products.second.store.name
products.first.store.name
products.first.store.store_name
products.first.store
products.length
products
n
c
@object
n
c
products.destroy
products.length
products
c
@search.results.first
@search.results
c
@search.results.first.visible
@search.results.first
@search.results
@search.result
c
@search.results.first.visible
@search.results.second
@search.results.first
@search.results
c
@search.results.first.buyable
@search.results.first.visible
@search.results.first
@search.results
@search
c
@products.first.visible
c
@products.first.visible
@products.first
c
@products.first.visible
@products.first
@products
c
Spree::Variant.find(params[:variant_id]).visible
params
Spree::Variant.find(params[:variant_id]).product.visible
Spree::Variant.find(params[:variant_id]).product
params
c
Spree::Variant.find(params[:variant_id]).product.visible
Spree::Variant.find(params[:variant_id]).product.visible == false
Spree::Variant.find(params[:variant_id]).product.buyable == false
Spree::Variant.find(params[:variant_id]).product.buyable
pro.nil?Spree::Variant.find(params[:variant_id]).product.buyable
Spree::Variant.find(params[:variant_id]).product.visible
!params.key?("variant_id")
c
total_product_count
c
error_count
c
error_count
c
error_count
c
(not product.present?) or product.visible == false
pro.nil?
not pro.nil?
not pro.present?
pro.present?
product.present?
c
n
product.visible
product.present?
poduct
c
errors
erros
n
e.message
e
n
product.visible
product
n
product
n
sell_price
retail_price
n
master_price
n
name
n
c
errors
c
errors
c
errors
c
errors
