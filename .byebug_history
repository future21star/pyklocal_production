c
n
c
Spree::Variant.find(params[:variant_id]).product.visible == false
!params.key?("variant_id") || (Spree::Variant.find(params[:variant_id]).product.visible == false) || (Spree::Variant.find(params[:variant_id]).product.buyable == false)
c
params
n
c
n
error
n
current_spree_user.present?
current_spree_user
n
already_ordered_quantity
n
variant.total_on_hand
n
quantity
n
variant
order
n
c
product.taxons
product.taxons.present?
product.tax_category.present?
product.cost_price.present?
product.cost_price
product.visible
product
product.visible = true
product.visible
product
product = Spree::Variant.find(params[:variant_id]).product
c
product = Spree::Variant.find(params[:variant_id]).product
Spree::Variant.find(params[:variant_id]).product
c
Spree::Variant.find(params[:variant_id]).product.visible == false
Spree::Variant.find(params[:variant_id]).product.buyable == false
params.key?("variant_id")
n
params
c
Spree::InfoCommercial.last.video.url
Spree::InfoCommercial.last.video
Spree::InfoCommercial.last
Spree::CarouselImage.first.image.url
Spree::CarouselImage.first.image
Spree::CarouselImage.first
@info_commercial.video
@info_commercial
n
source /usr/local/rvm/scripts/rvm
c
n
c
n
c
Spree::InfoCommercial.new(info_commercial_params)
info_commercial_params
params
c
Spree::InfoCommercial.second
Spree::InfoCommercial.last
Spree::InfoCommercial
n
@info_commercial
c
Spree::CarouselImage.last
Spree::InfoCommercial.last
@info_commercial.save
@info_commercial
info_commercial_params
c
n
content_for :page_title
c
content_for :page_actions
content_for :page_title
content_for
c
n
@carousel_images.each_with_index
n
@carousel_images.blank?
@carousel_images
c
@carousel_images
n
Spree::CarouselImage.where(is_static: false).active
Spree::CarouselImage.where(is_static: false).last
Spree::CarouselImage.where(is_static: false).first
Spree::CarouselImage.where(is_static: false)
Spree::CarouselImage.last.active
Spree::CarouselImage.last
Spree::CarouselImage.first
@carousel_images
c
wishlist.variant.product.visible == true
wishlist.variant.product.buyable
wishlist.variant.product.visible
wishlist = @wishlists[0]
n
@wishlists
n
current_spree_user.try(:wishlists).last
current_spree_user.try(:wishlists).first
current_spree_user.try(:wishlists)
c
@products = @search.results
@search = Sunspot.search(Spree::Product)
build_searcher(params.merge(include_images: true)).results
build_searcher(params.merge(include_images: true))
Sunspot.search(Spree::Product).results
Sunspot.search(Spree::Product)
Spree::Product.last
Spree::Product.first.last
Spree::Product.first
Spree::Product
@search.results
@search
n
c
@search.results
@search
n
c
@date2
@date1
c
sale_product_merchant_store_path
Rails.application.routes.url_helpers
c
sale_product_merchant_store_path
c
n
c
n
c
merchant[:start_date].to_s + "."
merchant[:start_date]."~"
merchant[:start_date]~
merchant[:start_date]
merchant[:start_date] + "~" + merchant[:end_date]
c
params
c
params[:view_mode]
end_date
start_date
n
c
@store_sale_array
n
c
params
n
c
Date.today.strftime('%m/%d/%Y')
Date.today
params
n
c
@start_date
c
Date.strptime(params[:start_date], "%m/%d/%Y") + 1.week
Date.strptime(params[:start_date], "%m/%d/%Y")
"8/18/2016".to_date
"8/8/2016".to_date
"5/6/2016".to_date
"8/18/2016".to_date
"8/18/2017".to_date
"08/18/2017".to_date
params[:start_date]
params[:start_date].to_date
params[:start_date]
params[:start_date] + 1.week
params[:start_date]
"8/6/2017".to_date
"5/6/2017".to_date
"5/6/2017".to_date()
"5/6/2017"
params[:start_date]
params
c
Today
today
today.to_date
"08/18/2017".to_date
"8/18/2017".to_date
params[:start_date].to_date
params[:start_date]
params
n
params
n
@store
c
@store_sale_array[1]
@store_sale_array[0]
@store_sale_array
c
@store_sale_array[0][:start_date]
@store_sale_array[0]
@store_sale_array
c
@merchant_hash['name']
@merchant_hash[:name]
@merchant_hash
c
n
c
n
c
n
@merchant_hash
n
date2
date1
n
merchant
n
c
merchant_store_report_path
html
c
n
date2
date1
n
c
click_on"ADD TO CART"
page.find(".out-of-stock").text.should == "Out of Stock"
page.find(".out-of-stock").text
page.find(".out-of-stock")..tet
page.find(".out-of-stock")
click_on"Go to storeddf"
c
page.find(".table-striped").find_css("tbody").collect(&:all_text).should have_content "I-Phone"
page.find(".table-striped").find_css("tbody").collect(&:all_text)
page.find(".table-striped").find_css("tbody")
page.find(".table-striped")
 page.find(".table").find_css("tbody").collect(&:all_text).should have_content "I-Phone"
click_on"View and edit all Productd"
click_on"View and edit all Product"
click_on"Go to stored"
click_on"Go to store"
c
click_on"Payment Preferencesdd"
click_on"Payment Preferencesd"
click_on"Payment Preferences"
c
click_on"View your order historyf"
