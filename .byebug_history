exit
@seller.stores.first.seller
@seller.stores.first
@seller.stores
@seller
c
 AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
n
exit
exigt
YAML.load_file("#{Rails.root}/config/api_config.yml")[Rails.env]
Rails.env
AMAZON_CLIENT.search_keywords(params[:keywords], {SearchIndex: (params[:serch_index] || "All"), ResponseGroup: (params[:response_type] || "Medium"), ItemPage: (params[:item_page] || 1)})
AMAZON_CLIENT
n
c
cc
c
Rails.application.secrets.HOST_URL
c
Rails.application.secrets.HOST_URL
c
Spree::Store.default
Spree::Store.first
Spree::Store.last
Spree::Store.lastr
Spree::Store.default
Spree::Store.current
request.host
c
request
c
Spree::Store.current
Spree::Store
Spree::Store.current.url
spree.spree_user_confirmation_url(:confirmation_token => token, :host => Spree::Store.current.url)
token
c
store
c
store
store = Merchant::Store.last
Merchant::Store.last
params
c
exit
params[:q]!=nil && params[:q][:lat].present? && params[:q][:lng].present?
c
params
c
params[:q][:radius] = "10000"
params
c
Merchant::Store.last.products
Merchant::Store.last
params
c
params
c
params
c
params
params[:q][:radius] = "100000"
params
c
params
c
params
c
params
c
bill_address
printable.printable_id
n
printable.printable_id
printable
c
Spree::PrintInvoice::Config.store_pdf
Spree::PrintInvoice::Config
Spree::Spree::PrintInvoice::Config
c
invoice = Spree::Order.find(invoice.printable_id)c
invoice.line_items
invoice = Spree::Order.find(invoice.printable_id)
invoice
c
printable.get_order_home_delivery_line_items_ids.count
printable.display_total.to_s
printable.completed_at
printable.number
printable = Spree::Order.find(printable.printable_id)
ship_address.blank?
defined? ship_address
ship_address
ship_address.any?
ship_address = Spree::Address.find(Spree::Order.find(printable.printable_id).bill_address_id)
Spree::Address.find(Spree::Order.find(printable.printable_id).bill_address_id)ship_address = Spree::Address.find(Spree::Order.find(printable.printable_id).bill_address_id)
Spree::Address.find(Spree::Order.find(printable.printable_id).bill_address_id)
Spree::Address.find(620)
Spree::Address.last
Spree::Order.last.ship_address_id
Spree::Order.first.ship_address_id
Spree::Order.find(printable.printable_id).bill_address_id
Spree::Address.find(206)
Spree::Address.first
Spree::Address
Spree::Order.find(printable.printable_id).ship_address_id
Spree::Spree::Order.find(printable.printable_id)
Spree::Spree::Order.find(printable.printable_id
Spree::Spree::Order.find(printable.printable_id).ship_address_id
Spree::Address.find(206)
Spree::Address
Spree::ShipAddress
Spree::ShipAddresss
Spree::Order
ShipAddress
Spree::ShipAddress
printable.respond_to? :get_order_home_delivery_line_items_ids
printable.method_defined? :get_order_home_delivery_line_items_ids
printable.get_order_home_delivery_line_items_ids && printable.get_order_home_delivery_line_items_ids.count == 0
printable.get_order_home_delivery_line_items_ids.count == 0
Spree::Order.find(printable.printable_id).ship_address
Spree::Order.find(printable.printable_id).ship_address_id
Spree::Order.find(printable.printable_id).ship_address
Spree::Order.find(printable.printable_id).bill_address
Spree::Order.find(printable.printable_id).bill_addresss
Spree::Order.find(printable.printable_id)
printable.ship_address
printable.ship_addresss
printable.bill_address
printable.get_order_home_delivery_line_items_ids.count
printable
c
Spree::Order.find(355).store
Spree::Order.find(355).store[1]
Spree::Order.find(355).store[0]
Spree::Order.find(355).store
Spree::Order.find(355)
Order.find(355)
printable.printable_id
printable.order
printable
c
file_path
File.exist?(file_path)
n
self.file_path
self
this
file_path
File.exist?(file_path)
file_path
c
Spree::PrintInvoice::Config.store_pdf
Spree::PrintInvoice::Config
Spree::PrintInvoice
c
n
filename
n
@order
n
c
@store_sale_array
c
n
params[:download_excel]
params
c
params[:download_excel]
params
c
n
c
params[:download_excel]
params
n
c
invoice = admin_controller.render_to_string(:layout => false , :template => "spree/printables/order/invoice.pdf.prawn", :type => :prawn, :locals => {:@doc => @order})
admin_controller = Spree::Admin::OrdersController.new
filename = "Invoice_#{@order.number}_#{Time.now.strftime('%Y%m%d')}.pdf"
@order = Spree::Order.find(invoice.printable_id)
invoice = Spree::BookkeepingDocument.find(params[:id])
params
Spree::Order.find(355)
Spree::BookkeepingDocument.find(321)
Spree::BookkeepingDocument.find(321).order
Spree::BookkeepingDocument.find(321)
Spree::Invoice.first
params
c
@all_facets.results.last.taxons[2]
@all_facets.results.last.taxons[1]
@all_facets.results.last.taxons[0]
@all_facets.results.last.taxons
@all_facets.results[1].taxons
@all_facets.results[0].taxons
@all_facets.results[0]
@all_facets.facet(:taxon_name).rows
n
params[:q]!=nil && params[:q][:category] && params[:q][:category] != "all"
params
c
search.results.last.taxons[0]
search.results.last.taxons[1]
search.results.last.taxons
search.results.last.taxon
search.results.last.taxonomy
search.results.last
search.results[0]
search.result[0]
search = Sunspot.search(Spree::Product) do with(:taxon_name, "Electronics") end
params[:q][:category]
@all_facets.facet(:taxon_name).rows
@all_facets.facet(:taxon_name)[1]
@all_facets.facet(:taxon_name)
@all_facets.facet
c
@wishlist.product
n
current_spree_user.wishlists.collect(&:product_id).include?(params[:wishlist][:product_id].to_i)
ncurrent_spree_user.wishlists.collect(&:product_id).include?(params[:wishlist][:product_id].to_i)
n
 Spree::Product.find(params[:wishlist][:product_id]).total_on_hand
c
@wishlist.spree_product_id
@wishlist.product
@wishlist.spree_product
@wishlist.product
@wishlist
@wishlist.save
@wishlist.user = current_spree_user
@wishlist = Spree::Wishlist.new wishlist_params
current_spree_user.wishlists.collect(&:spree_product_id).include?(params[:wishlist][:spree_product_id].to_i)
Spree::Product.find(params[:wishlist][:spree_product_id]).total_on_hand
c
n
c
n
wishlist_params
wishlist_params = {"spree_product_id" => "5789"}
wishlist_params
Spree::Wishlist.first
Spree::Wishlist.first.product
Spree::Wishlist.first
params
wishlist_params
c
current_spree_user.wishlists.collect(&:product_id).include?(params[:wishlist][:product_id].to_i)
current_spree_user.wishlists.collect(&:product_id)
c
wish.product
spree.product
wish.product
wish.spree_product
wish
